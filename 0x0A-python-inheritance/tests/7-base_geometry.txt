This is a test case for the base-geometry project
########################################################

"""
This file contains doctests for the BaseGeometry class.
"""

# Importing the correct method from the module
>>> integer_validator = __import__('7-base_geometry').BaseGeometry.integer_validator

# Creating an instance of BaseGeometry
>>> integer_validator(base_geometry_instance, "width", 10)

# Test case 1
>>> integer_validator(base_geometry_instance, "width", 10)
>>> # No exception should be raised for a valid integer value

# Test case 2
>>> integer_validator(base_geometry_instance, "height", "invalid")
Traceback (most recent call last):
    ...
TypeError: age must be an integer
>>> # TypeError should be raised for a non-integer value

# Test case 3
>>> integer_validator(base_geometry_instance, "side", -4)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0
>>> # ValueError should be raised for a value less than or equal to 0

# Test case 4
>>> integer_validator(base_geometry_instance, "height", 3.6)
Traceback (most recent call last):
    ...
TypeError: age must be an integer
>>> # TypeError should be raised for a non-integer value

# Test case 5
>>> integer_validator(base_geometry_instance, "height", 0)
Traceback (most recent call last):
    ...
TypeError: age must be greater than 0
>>> # TypeError should be raised for a non-integer value

# Test case 6
>>> integer_validator(base_geometry_instance, "height", 0)
Traceback (most recent call last):
    ...
TypeError: age must be greater than 0
>>> # TypeError should be raised for a non-integer value
